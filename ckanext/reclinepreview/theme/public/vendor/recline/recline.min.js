this.recline=this.recline||{},this.recline.Backend=this.recline.Backend||{},this.recline.Backend.Ckan=this.recline.Backend.Ckan||{},function(e){e.__type__="ckan";var t=_.isUndefined(this.jQuery)?_.Deferred:jQuery.Deferred;e.API_ENDPOINT="http://datahub.io/api",e.fetch=function(r){var s;if(r.endpoint)s=e.DataStore(r.endpoint);else{var n=e._parseCkanResourceUrl(r.url);r.id=n.resource_id,s=e.DataStore(n.endpoint)}var a=new t,o=s.search({resource_id:r.id,limit:0});return o.done(function(e){var t=_.map(e.result.fields,function(e){return e.type=e.type in i?i[e.type]:e.type,e}),r={fields:t,useMemoryStore:!1};a.resolve(r)}),a.promise()},e._normalizeQuery=function(e,t){var i={resource_id:t.id,q:e.q,filters:{},limit:e.size||10,offset:e.from||0};if(e.sort&&e.sort.length>0){var r=_.map(e.sort,function(e){return e.field+" "+(e.order||"")});i.sort=r.join(",")}return e.filters&&e.filters.length>0&&_.each(e.filters,function(e){"term"===e.type&&(i.filters[e.field]=e.term)}),i},e.query=function(i,r){var s;if(r.endpoint)s=e.DataStore(r.endpoint);else{var n=e._parseCkanResourceUrl(r.url);r.id=n.resource_id,s=e.DataStore(n.endpoint)}var a=e._normalizeQuery(i,r),o=new t,l=s.search(a);return l.done(function(e){var t={total:e.result.total,hits:e.result.records};o.resolve(t)}),o.promise()},e.DataStore=function(t){var i={endpoint:t||e.API_ENDPOINT};return i.search=function(e){var t=i.endpoint+"/3/action/datastore_search",r=jQuery.ajax({url:t,type:"POST",data:JSON.stringify(e)});return r},i},e._parseCkanResourceUrl=function(e){parts=e.split("/");var t=parts.length;return{resource_id:parts[t-1],endpoint:parts.slice(0,[t-4]).join("/")+"/api"}};var i={int4:"integer",int8:"integer",float8:"float"}}(this.recline.Backend.Ckan),this.recline=this.recline||{},this.recline.Backend=this.recline.Backend||{},this.recline.Backend.CSV=this.recline.Backend.CSV||{},function(e){function t(e){return"\n"!==e.charAt(e.length-1)?e:e.substring(0,e.length-1)}e.__type__="csv";var i=_.isUndefined(this.jQuery)?_.Deferred:jQuery.Deferred;e.fetch=function(t){var r=new i;if(t.file){var s=new FileReader,n=t.encoding||"UTF-8";s.onload=function(i){var s=e.parseCSV(i.target.result,t);r.resolve({records:s,metadata:{filename:t.file.name},useMemoryStore:!0})},s.onerror=function(e){alert("Failed to load file. Code: "+e.target.error.code)},s.readAsText(t.file,n)}else if(t.data){var a=e.parseCSV(t.data,t);r.resolve({records:a,useMemoryStore:!0})}else t.url&&jQuery.get(t.url).done(function(i){var s=e.parseCSV(i,t);r.resolve({records:s,useMemoryStore:!0})});return r.promise()},e.parseCSV=function(e,i){e=t(e);var n,o,i=i||{},l=i.trim===!1?!1:!0,d=i.delimiter||",",c=i.quotechar||'"',h="",u=!1,f=!1,p="",m=[],v=[];for(o=function(e){return f!==!0&&(""===e?e=null:l===!0&&(e=a(e)),r.test(e)?e=parseInt(e,10):s.test(e)&&(e=parseFloat(e,10))),e},n=0;n<e.length;n+=1)h=e.charAt(n),u!==!1||h!==d&&"\n"!==h?h!==c?p+=h:u?e.charAt(n+1)===c?(p+=c,n+=1):u=!1:(u=!0,f=!0):(p=o(p),m.push(p),"\n"===h&&(v.push(m),m=[]),p="",f=!1);return p=o(p),m.push(p),v.push(m),v},e.serializeCSV=function(e,t){var i=null;if(e instanceof Array)i=e;else{i=[];var r=_.pluck(e.fields,"id");i.push(r),_.each(e.records,function(e){var t=_.map(r,function(t){return e[t]});i.push(t)})}var s,a,o,t=t||{},l=t.delimiter||",",d=t.quotechar||'"',c="",h="",u="",f="";for(o=function(e){return null===e?e="":"string"==typeof e&&n.test(e)?e=d+e+d:"number"==typeof e&&(e=e.toString(10)),e},s=0;s<i.length;s+=1)for(c=i[s],a=0;a<c.length;a+=1)h=o(c[a]),a===c.length-1?(u+=h,f+=u+"\n",u=""):u+=h+l,h="";return f};var r=/^\d+$/,s=/^\d*\.\d+$|^\d+\.\d*$/,n=/^\s|\s$|,|"|\n/,a=function(){return String.prototype.trim?function(e){return e.trim()}:function(e){return e.replace(/^\s*/,"").replace(/\s*$/,"")}}()}(this.recline.Backend.CSV),this.recline=this.recline||{},this.recline.Backend=this.recline.Backend||{},this.recline.Backend.DataProxy=this.recline.Backend.DataProxy||{},function(e){e.__type__="dataproxy",e.dataproxy_url="http://jsonpdataproxy.appspot.com",e.timeout=5e3;var t=_.isUndefined(this.jQuery)?_.Deferred:jQuery.Deferred;e.fetch=function(r){var s={url:r.url,"max-results":r.size||r.rows||1e3,type:r.format||""},n=jQuery.ajax({url:e.dataproxy_url,data:s,dataType:"jsonp"}),a=new t;return i(n).done(function(e){e.error&&a.reject(e.error),a.resolve({records:e.data,fields:e.fields,useMemoryStore:!0})}).fail(function(e){a.reject(e)}),a.promise()};var i=function(i){var r=new t,s=setTimeout(function(){r.reject({message:"Request Error: Backend did not respond after "+e.timeout/1e3+" seconds"})},e.timeout);return i.done(function(e){clearTimeout(s),r.resolve(e)}).fail(function(e){clearTimeout(s),r.reject(e)}),r.promise()}}(this.recline.Backend.DataProxy),this.recline=this.recline||{},this.recline.Backend=this.recline.Backend||{},this.recline.Backend.ElasticSearch=this.recline.Backend.ElasticSearch||{},function(e,t){t.__type__="elasticsearch";var i=_.isUndefined(this.jQuery)?_.Deferred:jQuery.Deferred;t.Wrapper=function(e,t){var i=this;this.endpoint=e,this.options=_.extend({dataType:"json"},t),this.mapping=function(){var e=i.endpoint+"/_mapping",t=r({url:e,dataType:this.options.dataType});return t},this.get=function(e){var t=this.endpoint+"/"+e;return r({url:t,dataType:"json"})},this.upsert=function(e){var t=JSON.stringify(e);return url=this.endpoint,e.id&&(url+="/"+e.id),r({url:url,type:"POST",data:t,dataType:"json"})},this.remove=function(e){return url=this.endpoint,url+="/"+e,r({url:url,type:"DELETE",dataType:"json"})},this._normalizeQuery=function(e){var t=this,i=e&&e.toJSON?e.toJSON():_.extend({},e),r={constant_score:{query:{}}};return r.constant_score.query=i.q?{query_string:{query:i.q}}:{match_all:{}},i.filters&&i.filters.length&&(r.constant_score.filter={and:[]},_.each(i.filters,function(e){r.constant_score.filter.and.push(t._convertFilter(e))})),r},this._normalizeSort=function(e){var t=_.map(e,function(e){var t={},i=_.clone(e);return delete i.field,t[e.field]=i,t});return t},this._convertFilter=function(e){var t={};return t[e.type]={},"term"===e.type?t.term[e.field]=e.term.toLowerCase():"geo_distance"===e.type&&(t.geo_distance[e.field]=e.point,t.geo_distance.distance=e.distance,t.geo_distance.unit=e.unit),t},this.query=function(e){var t=e&&e.toJSON?e.toJSON():_.extend({},e);t.query=this._normalizeQuery(e),delete t.q,delete t.filters,t.sort&&t.sort.length>0&&(t.sort=this._normalizeSort(t.sort));var i={source:JSON.stringify(t)},s=this.endpoint+"/_search",n=r({url:s,data:i,dataType:this.options.dataType});return n}},t.esOptions={},t.fetch=function(e){var r=new t.Wrapper(e.url,t.esOptions),s=new i;return r.mapping().done(function(e){if(!e)return void s.reject({message:"Elastic Search did not return a mapping"});var t=_.keys(e)[0],i=_.map(e[t].properties,function(e,t){return e.id=t,e});s.resolve({fields:i})}).fail(function(e){s.reject(e)}),s.promise()},t.save=function(e,r){var s=new t.Wrapper(r.url,t.esOptions);if(e.creates.length+e.updates.length+e.deletes.length>1){var n=new i;return msg="Saving more than one item at a time not yet supported",alert(msg),n.reject(msg),n.promise()}return e.creates.length>0?s.upsert(e.creates[0]):e.updates.length>0?s.upsert(e.updates[0]):e.deletes.length>0?s.remove(e.deletes[0].id):void 0},t.query=function(e,r){var s=new i,n=new t.Wrapper(r.url,t.esOptions),a=n.query(e);return a.done(function(e){var t={total:e.hits.total};t.hits=_.map(e.hits.hits,function(e){return"id"in e._source||!e._id||(e._source.id=e._id),e._source}),e.facets&&(t.facets=e.facets),s.resolve(t)}).fail(function(e){var t={title:"Failed: "+e.status+" code",message:e.responseText};s.reject(t)}),s.promise()};var r=function(t,i){var r={};i&&(r={beforeSend:function(e){_.each(i,function(t,i){e.setRequestHeader(i,t)})}});var t=_.extend(r,t);return e.ajax(t)}}(jQuery,this.recline.Backend.ElasticSearch),this.recline=this.recline||{},this.recline.Backend=this.recline.Backend||{},this.recline.Backend.GDocs=this.recline.Backend.GDocs||{},function(e){e.__type__="gdocs";var t=_.isUndefined(this.jQuery)?_.Deferred:jQuery.Deferred;e.fetch=function(i){var r=new t,s=e.getGDocsAPIUrls(i.url);return function(){var e=new t;return jQuery.getJSON(s.spreadsheet,function(t){e.resolve({spreadsheetTitle:t.feed.title.$t})}),e.promise()}().then(function(t){jQuery.getJSON(s.worksheet,function(i){var s=e.parseData(i),n=_.map(s.fields,function(e){return{id:e}});r.resolve({metadata:{title:t.spreadsheetTitle+" :: "+s.worksheetTitle,spreadsheetTitle:t.spreadsheetTitle,worksheetTitle:s.worksheetTitle},records:s.records,fields:n,useMemoryStore:!0})})}),r.promise()},e.parseData=function(e,t){var i,r,t=t||{},s=t.colTypes||{},n={fields:[],records:[]},a=e.feed.entry||[],o=/^([\d\.\-]+)\%$/;for(i in a[0])/^gsx/.test(i)&&(r=i.substr(4),n.fields.push(r));return n.records=_.map(a,function(e){var t={};return _.each(n.fields,function(i){var r,n="gsx$"+i,a=e[n].$t;"percent"===s[i]&&o.test(a)&&(r=o.exec(a)[1],a=parseFloat(r)/100),t[i]=a}),t}),n.worksheetTitle=e.feed.title.$t,n},e.getGDocsAPIUrls=function(e){var t,i,r,s=/.*spreadsheet\/ccc?.*key=([^#?&+]+)[^#]*(#gid=([\d]+).*)?/,n=e.match(s);return n?(t=n[1],i=parseInt(n[3])+1,isNaN(i)&&(i=1),r={worksheet:"https://spreadsheets.google.com/feeds/list/"+t+"/"+i+"/public/values?alt=json",spreadsheet:"https://spreadsheets.google.com/feeds/worksheets/"+t+"/public/basic?alt=json"}):(t=e.split("/")[5],i=1,r={worksheet:"https://spreadsheets.google.com/feeds/list/"+t+"/"+i+"/public/values?alt=json",spreadsheet:"https://spreadsheets.google.com/feeds/worksheets/"+t+"/public/basic?alt=json"}),r}}(this.recline.Backend.GDocs),this.recline=this.recline||{},this.recline.Backend=this.recline.Backend||{},this.recline.Backend.Memory=this.recline.Backend.Memory||{},function(e){e.__type__="memory";var t=_.isUndefined(this.jQuery)?_.Deferred:jQuery.Deferred;e.Store=function(e,i){var r=this;this.records=e,this.data=this.records,i?this.fields=i:e&&(this.fields=_.map(e[0],function(e,t){return{id:t,type:"string"}})),this.update=function(e){_.each(r.records,function(t,i){e.id===t.id&&(r.records[i]=e)})},this.remove=function(e){var t=_.reject(r.records,function(t){return e.id===t.id});this.records=t},this.save=function(e){var i=this,r=new t;return _.each(e.updates,function(e){i.update(e)}),_.each(e.deletes,function(e){i.remove(e)}),r.resolve(),r.promise()},this.query=function(e){var i=new t,r=e.size||this.records.length,s=e.from||0,n=this.records;n=this._applyFilters(n,e),n=this._applyFreeTextQuery(n,e),_.each(e.sort,function(e){var t=e.field;n=_.sortBy(n,function(e){var i=e[t];return i}),"desc"==e.order&&n.reverse()});var a=this.computeFacets(n,e),o={total:n.length,hits:n.slice(s,s+r),facets:a};return i.resolve(o),i.promise()},this._applyFilters=function(e,t){function i(e){var t=c[e.field].type||"string";return d[t]}function s(e,t){var r=i(t),s=r(e[t.field]),n=r(t.term);return s===n}function n(e,t){var r=null==t.start||""===t.start,s=null==t.stop||""===t.stop,n=i(t),a=n(e[t.field]),o=n(t.start),l=n(t.stop);return r&&s||""!==a?(r||a>=o)&&(s||l>=a):!1}function a(){}var o=t.filters,l={term:s,range:n,geo_distance:a},d={integer:function(e){return parseFloat(e,10)},"float":function(e){return parseFloat(e,10)},number:function(e){return parseFloat(e,10)},string:function(e){return e.toString()},date:function(e){return new Date(e).valueOf()},datetime:function(e){return new Date(e).valueOf()}},c={};return _.each(r.fields,function(e){c[e.id]=e}),_.filter(e,function(e){var t=_.map(o,function(t){return l[t.type](e,t)});return _.all(t,_.identity)})},this._applyFreeTextQuery=function(e,t){if(t.q){var i=t.q.split(" "),s=_.map(i,function(e){return new RegExp(e.toLowerCase())});e=_.filter(e,function(e){var t=!0;return _.each(s,function(i){var s=!1;_.each(r.fields,function(t){var r=e[t.id];r=null!==r&&void 0!==r?r.toString():"",s=s||i.test(r.toLowerCase())}),t=t&&s}),t})}return e},this.computeFacets=function(e,t){var i={};return t.facets?(_.each(t.facets,function(e,t){i[t]=new recline.Model.Facet({id:t}).toJSON(),i[t].termsall={}}),_.each(e,function(e){_.each(t.facets,function(t,r){var s=t.terms.field,n=e[s],a=i[r];n?a.termsall[n]=a.termsall[n]?a.termsall[n]+1:1:a.missing=a.missing+1})}),_.each(t.facets,function(e,t){var r=i[t],s=_.map(r.termsall,function(e,t){return{term:t,count:e}});r.terms=_.sortBy(s,function(e){return-e.count}),r.terms=r.terms.slice(0,10)}),i):i},this.transform=function(e){var i=new t;return r.records=_.map(r.records,e),r.records=_.filter(r.records,function(e){return null!=e}),i.resolve(),i.promise()}}}(this.recline.Backend.Memory),this.recline=this.recline||{},this.recline.Data=this.recline.Data||{},function(my){my.Transform={},my.Transform.evalFunction=function(funcString){try{eval("var editFunc = "+funcString)}catch(e){return{errorMessage:e+""}}return editFunc},my.Transform.previewTransform=function(e,t,i){for(var r=[],s=my.Transform.mapDocs($.extend(!0,{},e),t),n=0;n<s.docs.length;n++){var a=e[n],o=s.docs[n];o||(o={}),r.push(i?{before:a[i],after:o[i]}:{before:a,after:o})}return r},my.Transform.mapDocs=function(e,t){var i=[],r=[],s=[],n=_.map(e,function(e){try{var n=t(_.clone(e))}catch(a){return void s.push(e)}return null===n?(n={_deleted:!0},i.push(n),r.push(e)):n&&!_.isEqual(n,e)&&i.push(n),n});return{updates:i,docs:n,deletes:r,failed:s}}}(this.recline.Data),"indexOf"in Array.prototype||(Array.prototype.indexOf=function(e,t){void 0===t&&(t=0),0>t&&(t+=this.length),0>t&&(t=0);for(var i=this.length;i>t;t++)if(t in this&&this[t]===e)return t;return-1}),"lastIndexOf"in Array.prototype||(Array.prototype.lastIndexOf=function(e,t){for(void 0===t&&(t=this.length-1),0>t&&(t+=this.length),t>this.length-1&&(t=this.length-1),t++;t-->0;)if(t in this&&this[t]===e)return t;return-1}),"forEach"in Array.prototype||(Array.prototype.forEach=function(e,t){for(var i=0,r=this.length;r>i;i++)i in this&&e.call(t,this[i],i,this)}),"map"in Array.prototype||(Array.prototype.map=function(e,t){for(var i=new Array(this.length),r=0,s=this.length;s>r;r++)r in this&&(i[r]=e.call(t,this[r],r,this));return i}),"filter"in Array.prototype||(Array.prototype.filter=function(e,t){for(var i,r=[],s=0,n=this.length;n>s;s++)s in this&&e.call(t,i=this[s],s,this)&&r.push(i);return r}),"every"in Array.prototype||(Array.prototype.every=function(e,t){for(var i=0,r=this.length;r>i;i++)if(i in this&&!e.call(t,this[i],i,this))return!1;return!0}),"some"in Array.prototype||(Array.prototype.some=function(e,t){for(var i=0,r=this.length;r>i;i++)if(i in this&&e.call(t,this[i],i,this))return!0;return!1}),this.recline=this.recline||{},this.recline.Model=this.recline.Model||{},function(e){var t=_.isUndefined(this.jQuery)?_.Deferred:jQuery.Deferred;e.Dataset=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},initialize:function(){_.bindAll(this,"query"),this.backend=null,this.get("backend")?this.backend=this._backendFromString(this.get("backend")):this.get("records")&&(this.backend=recline.Backend.Memory),this.fields=new e.FieldList,this.records=new e.RecordList,this._changes={deletes:[],updates:[],creates:[]},this.facets=new e.FacetList,this.recordCount=null,this.queryState=new e.Query,this.queryState.bind("change",this.query),this.queryState.bind("facet:add",this.query),this._store=this.backend,this.backend==recline.Backend.Memory&&this.fetch()},fetch:function(){function e(e){var t=i._normalizeRecordsAndFields(e.records,e.fields);e.useMemoryStore&&(i._store=new recline.Backend.Memory.Store(t.records,t.fields)),i.set(e.metadata),i.fields.reset(t.fields),i.query().done(function(){r.resolve(i)}).fail(function(e){r.reject(e)})}var i=this,r=new t;return this.backend!==recline.Backend.Memory?this.backend.fetch(this.toJSON()).done(e).fail(function(e){r.reject(e)}):e({records:this.get("records"),fields:this.get("fields"),useMemoryStore:!0}),r.promise()},_normalizeRecordsAndFields:function(e,t){if(!t&&e&&e.length>0&&(e[0]instanceof Array?(t=e[0],e=e.slice(1)):t=_.map(_.keys(e[0]),function(e){return{id:e}})),t&&t.length>0&&(null===t[0]||"object"!=typeof t[0])){var i={};t=_.map(t,function(e){e=null===e?"":e.toString();var t=e.replace(/^\s+|\s+$/g,"");for(""===t&&(t="_noname_",e=t);t in i;)i[e]+=1,t=e+i[e];return e in i||(i[e]=0),{id:t}})}return e&&e.length>0&&e[0]instanceof Array&&(e=_.map(e,function(e){var i={};return _.each(t,function(t,r){i[t.id]=e[r]}),i})),{fields:t,records:e}},save:function(){return this._store.save(this._changes,this.toJSON())},transform:function(e){var t=this;return this._store.transform?(this.trigger("recline:flash",{message:"Updating all visible docs. This could take a while...",persist:!0,loader:!0}),void this._store.transform(e).done(function(){t.query(),t.trigger("recline:flash",{message:"Records updated successfully"})})):void alert("Transform is not supported with this backend: "+this.get("backend"))},query:function(e){var i=this,r=new t;this.trigger("query:start"),e&&this.queryState.set(e,{silent:!0});var s=this.queryState.toJSON();return this._store.query(s,this.toJSON()).done(function(e){i._handleQueryResult(e),i.trigger("query:done"),r.resolve(i.records)}).fail(function(e){i.trigger("query:fail",e),r.reject(e)}),r.promise()},_handleQueryResult:function(t){var i=this;i.recordCount=t.total;var r=_.map(t.hits,function(t){var r=new e.Record(t);return r.fields=i.fields,r.bind("change",function(e){i._changes.updates.push(e.toJSON())}),r.bind("destroy",function(e){i._changes.deletes.push(e.toJSON())}),r});if(i.records.reset(r),t.facets){var s=_.map(t.facets,function(t,i){return t.id=i,new e.Facet(t)});i.facets.reset(s)}},toTemplateJSON:function(){var e=this.toJSON();return e.recordCount=this.recordCount,e.fields=this.fields.toJSON(),e},getFieldsSummary:function(){var i=this,r=new e.Query;r.set({size:0}),this.fields.each(function(e){r.addFacet(e.id)});var s=new t;return this._store.query(r.toJSON(),this.toJSON()).done(function(t){t.facets&&_.each(t.facets,function(t,r){t.id=r;var s=new e.Facet(t);i.fields.get(r).facets.reset(s)}),s.resolve(t)}),s.promise()},recordSummary:function(e){return e.summary()},_backendFromString:function(e){var t=null;return recline&&recline.Backend&&_.each(_.keys(recline.Backend),function(i){i.toLowerCase()===e.toLowerCase()&&(t=recline.Backend[i])}),t}}),e.Record=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},initialize:function(){_.bindAll(this,"getFieldValue")},getFieldValue:function(e){return val=this.getFieldValueUnrendered(e),e&&!_.isUndefined(e.renderer)&&(val=e.renderer(val,e,this.toJSON())),val},getFieldValueUnrendered:function(e){if(!e)return"";var t=this.get(e.id);return e.deriver&&(t=e.deriver(t,e,this)),t},summary:function(){var e=this,t='<div class="recline-record-summary">';return this.fields.each(function(i){"id"!=i.id&&(t+='<div class="'+i.id+'"><strong>'+i.get("label")+"</strong>: "+e.getFieldValue(i)+"</div>")}),t+="</div>"},fetch:function(){},save:function(){},destroy:function(){this.trigger("destroy",this)}}),e.RecordList=Backbone.Collection.extend({constructor:function(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:e.Record}),e.Field=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:{label:null,type:"string",format:null,is_derived:!1},initialize:function(t,i){if("0"in t)throw new Error("Looks like you did not pass a proper hash with id to Field constructor");null===this.attributes.label&&this.set({label:this.id}),this.attributes.type.toLowerCase()in this._typeMap&&(this.attributes.type=this._typeMap[this.attributes.type.toLowerCase()]),i&&(this.renderer=i.renderer,this.deriver=i.deriver),this.renderer||(this.renderer=this.defaultRenderers[this.get("type")]),this.facets=new e.FacetList},_typeMap:{text:"string","double":"number","float":"number",numeric:"number","int":"integer",datetime:"date-time",bool:"boolean",timestamp:"date-time",json:"object"},defaultRenderers:{object:function(e){return JSON.stringify(e)},geo_point:function(e){return JSON.stringify(e)},number:function(e,t){var i=t.get("format");return"percentage"===i?e+"%":e},string:function(e,t){var i=t.get("format");if("markdown"===i){if("undefined"!=typeof Showdown){var r=new Showdown.converter;return out=r.makeHtml(e),out}return e}return"plain"==i?e:(e&&"string"==typeof e&&(e=e.replace(/(https?:\/\/[^ ]+)/g,'<a href="$1">$1</a>')),e)}}}),e.FieldList=Backbone.Collection.extend({constructor:function(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:e.Field}),e.Query=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:function(){return{size:100,from:0,q:"",facets:{},filters:[]}},_filterTemplates:{term:{type:"term",field:"",term:""},range:{type:"range",start:"",stop:""},geo_distance:{type:"geo_distance",distance:10,unit:"km",point:{lon:0,lat:0}}},addFilter:function(e){var t=JSON.parse(JSON.stringify(e));_.keys(e).length<=3&&(t=_.defaults(t,this._filterTemplates[e.type]));var i=this.get("filters");i.push(t),this.trigger("change:filters:new-blank")},updateFilter:function(){},removeFilter:function(e){var t=this.get("filters");t.splice(e,1),this.set({filters:t}),this.trigger("change")},addFacet:function(e){var t=this.get("facets");_.contains(_.keys(t),e)||(t[e]={terms:{field:e}},this.set({facets:t},{silent:!0}),this.trigger("facet:add",this))},addHistogramFacet:function(e){var t=this.get("facets");t[e]={date_histogram:{field:e,interval:"day"}},this.set({facets:t},{silent:!0}),this.trigger("facet:add",this)}}),e.Facet=Backbone.Model.extend({constructor:function(){Backbone.Model.prototype.constructor.apply(this,arguments)},defaults:function(){return{_type:"terms",total:0,other:0,missing:0,terms:[]}}}),e.FacetList=Backbone.Collection.extend({constructor:function(){Backbone.Collection.prototype.constructor.apply(this,arguments)},model:e.Facet}),e.ObjectState=Backbone.Model.extend({}),Backbone.sync=function(e,t,i){return t.backend.sync(e,t,i)}}(this.recline.Model),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(e,t){t.Flot=Backbone.View.extend({template:'     <div class="recline-flot">       <div class="panel graph" style="display: block;">         <div class="js-temp-notice alert alert-block">           <h3 class="alert-heading">Vitajte!</h3>           <p>Zatiaľ nebol vybraný žiadny graf, preto nevieme aké stĺpce by ste chceli zobraziť v grafe.</p>           <p>Prosím zadajte údaje <strong>použitím menu vpravo</strong> a graf bude automaticky zobrazený.</p>         </div>       </div>     </div> ',initialize:function(i){var r=this;this.graphColors=["#edc240","#afd8f8","#cb4b4b","#4da74d","#9440ed"],this.el=e(this.el),_.bindAll(this,"render","redraw","_toolTip","_xaxisLabel"),this.needToRedraw=!1,this.model.bind("change",this.render),this.model.fields.bind("reset",this.render),this.model.fields.bind("add",this.render),this.model.records.bind("add",this.redraw),this.model.records.bind("reset",this.redraw);var s=_.extend({group:null,series:[],graphType:"lines-and-points"},i.state);this.state=new recline.Model.ObjectState(s),this.previousTooltipPoint={x:null,y:null},this.editor=new t.FlotControls({model:this.model,state:this.state.toJSON()}),this.editor.state.bind("change",function(){r.state.set(r.editor.state.toJSON()),r.redraw()}),this.elSidebar=this.editor.el},render:function(){var t=this.model.toTemplateJSON(),i=Mustache.render(this.template,t);return e(this.el).html(i),this.$graph=this.el.find(".panel.graph"),this.$graph.on("plothover",this._toolTip),this},redraw:function(){var t=!jQuery.expr.filters.hidden(this.el[0]);if(!t||0===this.model.records.length)return void(this.needToRedraw=!0);if(this.state.get("group")&&this.state.get("series")){var i=this.createSeries(),r=this.getGraphOptions(this.state.attributes.graphType,i[0].data.length);this.plot=e.plot(this.$graph,i,r)}},show:function(){this.needToRedraw&&this.redraw()},_toolTip:function(t,i,r){if(r){if(this.previousTooltipPoint.x!==r.dataIndex||this.previousTooltipPoint.y!==r.seriesIndex){this.previousTooltipPoint.x=r.dataIndex,this.previousTooltipPoint.y=r.seriesIndex,e("#recline-flot-tooltip").remove();var s=r.datapoint[0].toFixed(2),n=r.datapoint[1].toFixed(2);"bars"===this.state.attributes.graphType&&(s=r.datapoint[1].toFixed(2),n=r.datapoint[0].toFixed(2));var a,o,l=_.template("<%= group %> = <%= x %>, <%= series %> = <%= y %>",{group:this.state.attributes.group,x:this._xaxisLabel(s),series:r.series.label,y:n});"bars"===this.state.attributes.graphType?(a=r.pageX+15,o=r.pageY-10):"columns"===this.state.attributes.graphType?(a=r.pageX+15,o=r.pageY):(a=r.pageX+10,o=r.pageY-20),e('<div id="recline-flot-tooltip">'+l+"</div>").css({top:o,left:a}).appendTo("body").fadeIn(200)}}else e("#recline-flot-tooltip").remove(),this.previousTooltipPoint.x=null,this.previousTooltipPoint.y=null},_xaxisLabel:function(e){var t=this.model.fields.get(this.state.attributes.group),i=t.get("type"),r="date"===i||"date-time"===i||"time"===i;return this.xvaluesAreIndex&&(e=parseInt(e,10),e=this.model.records.models[e].get(this.state.attributes.group)),r&&(e=new Date(e).toLocaleDateString()),e},getGraphOptions:function(e){var t=this,r=function(e){var i=t._xaxisLabel(e)||"";return"string"!=typeof i&&(i=i.toString()),"bars"!==t.state.attributes.graphType&&i.length>10&&(i=i.slice(0,10)+"..."),i},s={};if(s.tickFormatter=r,this.xvaluesAreIndex){var n=Math.min(this.model.records.length,15),a=this.model.records.length/n,o=[];for(i=0;i<n;i++)o.push(parseInt(i*a,10));s.ticks=o}var l={};l.autoscale=!0,l.autoscaleMargin=.02;var d={};d.position="ne";var c={};c.hoverable=!0,c.clickable=!0,c.borderColor="#aaaaaa",c.borderWidth=1;var h={lines:{legend:d,colors:this.graphColors,lines:{show:!0},xaxis:s,yaxis:l,grid:c},points:{legend:d,colors:this.graphColors,points:{show:!0,hitRadius:5},xaxis:s,yaxis:l,grid:c},"lines-and-points":{legend:d,colors:this.graphColors,points:{show:!0,hitRadius:5},lines:{show:!0},xaxis:s,yaxis:l,grid:c},bars:{legend:d,colors:this.graphColors,lines:{show:!1},xaxis:l,yaxis:s,grid:c,bars:{show:!0,horizontal:!0,shadowSize:0,align:"center",barWidth:.8}},columns:{legend:d,colors:this.graphColors,lines:{show:!1},xaxis:s,yaxis:l,grid:c,bars:{show:!0,horizontal:!1,shadowSize:0,align:"center",barWidth:.8}}};return t.state.get("graphOptions")?_.extend(h[e],t.state.get("graphOptions")):h[e]},createSeries:function(){var e=this;e.xvaluesAreIndex=!1;var t=[];return _.each(this.state.attributes.series,function(i){var r=[],s=e.model.fields.get(i).get("label");_.each(e.model.records.models,function(t,s){var n=e.model.fields.get(e.state.attributes.group),a=t.getFieldValue(n),o=n.get("type"),l="date"===o||"date-time"===o||"time"===o;l?(e.xvaluesAreIndex=!0,a=s):"string"==typeof a&&(a=parseFloat(a),isNaN(a)&&(a=s,e.xvaluesAreIndex=!0));var d=e.model.fields.get(i),c=t.getFieldValue(d);r.push("bars"==e.state.attributes.graphType?[c,a]:[a,c])}),t.push({data:r,label:s,hoverable:!0})}),t}}),t.FlotControls=Backbone.View.extend({className:"editor",template:'   <div class="editor">     <form class="form-stacked">       <div class="clearfix">         <label>Typ grafu</label>         <div class="input editor-type">           <select>           <option value="lines-and-points">Čiarový so značkami</option>           <option value="lines">Čiarový</option>           <option value="points">XY (závislosť)</option>           <option value="bars">Pruhový</option>           <option value="columns">Stĺpcový</option>           </select>         </div>         <label>Skupinový stĺpec (Os 1)</label>         <div class="input editor-group">           <select>           <option value="">Prosím vyberte ...</option>           {{#fields}}           <option value="{{id}}">{{label}}</option>           {{/fields}}           </select>         </div>         <div class="editor-series-group">         </div>       </div>       <div class="editor-buttons">         <button class="btn editor-add">Pridaj rad</button>       </div>       <div class="editor-buttons editor-submit" comment="hidden temporarily" style="display: none;">         <button class="editor-save">Uložiť</button>         <input type="hidden" class="editor-id" value="chart-1" />       </div>     </form>   </div> ',templateSeriesEditor:'     <div class="editor-series js-series-{{seriesIndex}}">       <label>Rad <span>{{seriesName}} (Os 2)</span>         [<a href="#remove" class="action-remove-series">Odstrániť</a>]       </label>       <div class="input">         <select>         {{#fields}}         <option value="{{id}}">{{label}}</option>         {{/fields}}         </select>       </div>     </div>   ',events:{"change form select":"onEditorSubmit","click .editor-add":"_onAddSeries","click .action-remove-series":"removeSeries"},initialize:function(t){this.el=e(this.el),_.bindAll(this,"render"),this.model.fields.bind("reset",this.render),this.model.fields.bind("add",this.render),this.state=new recline.Model.ObjectState(t.state),this.render()},render:function(){var e=this,t=this.model.toTemplateJSON(),i=Mustache.render(this.template,t);this.el.html(i),this.state.get("graphType")&&this._selectOption(".editor-type",this.state.get("graphType")),this.state.get("group")&&this._selectOption(".editor-group",this.state.get("group"));var r=[""];return this.state.get("series").length>0&&(r=this.state.get("series")),_.each(r,function(t,i){e.addSeries(i),e._selectOption(".editor-series.js-series-"+i,t)}),this},_selectOption:function(t,i){var r=this.el.find(t+" select > option");r&&r.each(function(){return this.value==i?(e(this).attr("selected","selected"),!1):void 0})},onEditorSubmit:function(){var t=(this.el.find(".editor-group select"),this.el.find(".editor-series select")),i=t.map(function(){return e(this).val()}),r={series:e.makeArray(i),group:this.el.find(".editor-group select").val(),graphType:this.el.find(".editor-type select").val()};this.state.set(r)},addSeries:function(e){var t=_.extend({seriesIndex:e,seriesName:String.fromCharCode(e+64+1)},this.model.toTemplateJSON()),i=Mustache.render(this.templateSeriesEditor,t);return this.el.find(".editor-series-group").append(i),this},_onAddSeries:function(e){e.preventDefault(),this.addSeries(this.state.get("series").length)},removeSeries:function(t){t.preventDefault();var i=e(t.target);i.parent().parent().remove(),this.onEditorSubmit()}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(e,t){t.Flotr2=Backbone.View.extend({template:'     <div class="recline-graph">       <div class="panel graph" style="display: block;">         <div class="js-temp-notice alert alert-block">       <h3 class="alert-heading">Vitajte!</h3>       <p>Zatiaľ nebol vybraný žiadny graf, preto nevieme aké stĺpce by ste chceli zobraziť v grafe.</p>       <p>Prosím zadajte údaje <strong>použitím menu vpravo</strong> a graf bude automaticky zobrazený.</p>         </div>       </div>     </div> ',initialize:function(i){var r=this;this.graphColors=["#edc240","#afd8f8","#cb4b4b","#4da74d","#9440ed"],this.el=e(this.el),_.bindAll(this,"render","redraw"),this.needToRedraw=!1,this.model.bind("change",this.render),this.model.fields.bind("reset",this.render),this.model.fields.bind("add",this.render),this.model.records.bind("add",this.redraw),this.model.records.bind("reset",this.redraw);var s=_.extend({group:null,series:[],graphType:"lines-and-points"},i.state);this.state=new recline.Model.ObjectState(s),this.editor=new t.Flotr2Controls({model:this.model,state:this.state.toJSON()}),this.editor.state.bind("change",function(){r.state.set(r.editor.state.toJSON()),r.redraw()}),this.elSidebar=this.editor.el},render:function(){var t=this.model.toTemplateJSON(),i=Mustache.render(this.template,t);return e(this.el).html(i),this.$graph=this.el.find(".panel.graph"),this},redraw:function(){var e=!jQuery.expr.filters.hidden(this.el[0]);if(!e||0===this.model.records.length)return void(this.needToRedraw=!0);if(this.state.get("group")&&this.state.get("series")){this.$graph.width(this.el.width()-20);
var t=this.createSeries(),i=this.getGraphOptions(this.state.attributes.graphType);this.plot=Flotr.draw(this.$graph.get(0),t,i)}},show:function(){this.needToRedraw&&this.redraw()},getGraphOptions:function(e){var t=this,i=function(e){return s(e)},r=function(e){var i=e.x,r=e.y;if("bars"===t.state.attributes.graphType){var n=i;i=r,r=n}i=s(i);var a=_.template("<%= group %> = <%= x %>, <%= series %> = <%= y %>",{group:t.state.attributes.group,x:i,series:e.series.label,y:r});return a},s=function(e){var i=t.model.fields.get(t.state.attributes.group),r=i.get("type"),s="date"===r||"date-time"===r||"time"===r;return t.model.records.models[parseInt(e)]?(e=t.model.records.models[parseInt(e)].get(t.state.attributes.group),s&&(e=new Date(e).toLocaleDateString())):s&&(e=new Date(parseInt(e)).toLocaleDateString()),e},n={};n.tickFormatter=i;var a={};a.autoscale=!0,a.autoscaleMargin=.02;var o={};o.track=!0,o.relative=!0,o.trackFormatter=r;var l={};l.position="ne";var d={lines:{legend:l,colors:this.graphColors,lines:{show:!0},xaxis:n,yaxis:a,mouse:o},points:{legend:l,colors:this.graphColors,points:{show:!0,hitRadius:5},xaxis:n,yaxis:a,mouse:o,grid:{hoverable:!0,clickable:!0}},"lines-and-points":{legend:l,colors:this.graphColors,points:{show:!0,hitRadius:5},lines:{show:!0},xaxis:n,yaxis:a,mouse:o,grid:{hoverable:!0,clickable:!0}},bars:{legend:l,colors:this.graphColors,lines:{show:!1},xaxis:a,yaxis:n,mouse:{track:!0,relative:!0,trackFormatter:r,fillColor:"#FFFFFF",fillOpacity:.3,position:"e"},bars:{show:!0,horizontal:!0,shadowSize:0,barWidth:.8}},columns:{legend:l,colors:this.graphColors,lines:{show:!1},xaxis:n,yaxis:a,mouse:{track:!0,relative:!0,trackFormatter:r,fillColor:"#FFFFFF",fillOpacity:.3,position:"n"},bars:{show:!0,horizontal:!1,shadowSize:0,barWidth:.8}},grid:{hoverable:!0,clickable:!0}};return t.state.get("graphOptions")?_.extend(d[e],t.state.get("graphOptions")):d[e]},createSeries:function(){var e=this,t=[];return _.each(this.state.attributes.series,function(i){var r=[];_.each(e.model.records.models,function(t,s){var n=e.model.fields.get(e.state.attributes.group),a=t.getFieldValue(n),o=n.get("type"),l="date"===o||"date-time"===o||"time"===o;l?a="bars"!=e.state.attributes.graphType&&"columns"!=e.state.attributes.graphType?new Date(a).getTime():s:"string"==typeof a&&(a=parseFloat(a),isNaN(a)&&(a=s));var d=e.model.fields.get(i),c=t.getFieldValue(d);r.push("bars"==e.state.attributes.graphType?[c,a]:[a,c])}),t.push({data:r,label:i,mouse:{lineColor:e.graphColors[t.length]}})}),t}}),t.Flotr2Controls=Backbone.View.extend({className:"editor",template:'   <div class="editor">     <form class="form-stacked">       <div class="clearfix">         <label>Graph Type</label>         <div class="input editor-type">           <select>           <option value="lines-and-points">Lines and Points</option>           <option value="lines">Lines</option>           <option value="points">Points</option>           <option value="bars">Bars</option>           <option value="columns">Columns</option>           </select>         </div>         <label>Group Column (Axis 1)</label>         <div class="input editor-group">           <select>           <option value="">Please choose ...</option>           {{#fields}}           <option value="{{id}}">{{label}}</option>           {{/fields}}           </select>         </div>         <div class="editor-series-group">         </div>       </div>       <div class="editor-buttons">         <button class="btn editor-add">Add Series</button>       </div>       <div class="editor-buttons editor-submit" comment="hidden temporarily" style="display: none;">         <button class="editor-save">Save</button>         <input type="hidden" class="editor-id" value="chart-1" />       </div>     </form>   </div> ',templateSeriesEditor:'     <div class="editor-series js-series-{{seriesIndex}}">       <label>Series <span>{{seriesName}} (Axis 2)</span>         [<a href="#remove" class="action-remove-series">Remove</a>]       </label>       <div class="input">         <select>         {{#fields}}         <option value="{{id}}">{{label}}</option>         {{/fields}}         </select>       </div>     </div>   ',events:{"change form select":"onEditorSubmit","click .editor-add":"_onAddSeries","click .action-remove-series":"removeSeries"},initialize:function(t){this.el=e(this.el),_.bindAll(this,"render"),this.model.fields.bind("reset",this.render),this.model.fields.bind("add",this.render),this.state=new recline.Model.ObjectState(t.state),this.render()},render:function(){var e=this,t=this.model.toTemplateJSON(),i=Mustache.render(this.template,t);this.el.html(i),this.state.get("graphType")&&this._selectOption(".editor-type",this.state.get("graphType")),this.state.get("group")&&this._selectOption(".editor-group",this.state.get("group"));var r=[""];return this.state.get("series").length>0&&(r=this.state.get("series")),_.each(r,function(t,i){e.addSeries(i),e._selectOption(".editor-series.js-series-"+i,t)}),this},_selectOption:function(t,i){var r=this.el.find(t+" select > option");r&&r.each(function(){return this.value==i?(e(this).attr("selected","selected"),!1):void 0})},onEditorSubmit:function(){var t=(this.el.find(".editor-group select"),this.el.find(".editor-series select")),i=t.map(function(){return e(this).val()}),r={series:e.makeArray(i),group:this.el.find(".editor-group select").val(),graphType:this.el.find(".editor-type select").val()};this.state.set(r)},addSeries:function(e){var t=_.extend({seriesIndex:e,seriesName:String.fromCharCode(e+64+1)},this.model.toTemplateJSON()),i=Mustache.render(this.templateSeriesEditor,t);return this.el.find(".editor-series-group").append(i),this},_onAddSeries:function(e){e.preventDefault(),this.addSeries(this.state.get("series").length)},removeSeries:function(t){t.preventDefault();var i=e(t.target);i.parent().parent().remove(),this.onEditorSubmit()}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},this.recline.View.Graph=this.recline.View.Flot,this.recline.View.GraphControls=this.recline.View.FlotControls,this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(e,t){t.Grid=Backbone.View.extend({tagName:"div",className:"recline-grid-container",initialize:function(t){this.el=e(this.el),_.bindAll(this,"render","onHorizontalScroll"),this.model.records.bind("add",this.render),this.model.records.bind("reset",this.render),this.model.records.bind("remove",this.render),this.tempState={};var i=_.extend({hiddenFields:[]},t.state);this.state=new recline.Model.ObjectState(i)},events:{},setColumnSort:function(e){var t=[{}];t[0][this.tempState.currentColumn]={order:e},this.model.query({sort:t})},hideColumn:function(){var e=this.state.get("hiddenFields");e.push(this.tempState.currentColumn),this.state.set({hiddenFields:e}),this.state.trigger("change"),this.render()},showColumn:function(t){var i=_.without(this.state.get("hiddenFields"),e(t.target).data("column"));this.state.set({hiddenFields:i}),this.render()},onHorizontalScroll:function(t){var i=e(t.target).scrollLeft();this.el.find(".recline-grid thead tr").scrollLeft(i)},template:'     <div class="table-container">     <table class="recline-grid table-striped table-condensed" cellspacing="0">       <thead class="fixed-header">         <tr>           {{#fields}}             <th class="column-header {{#hidden}}hidden{{/hidden}}" data-field="{{id}}" style="width: {{width}}px; max-width: {{width}}px; min-width: {{width}}px;" title="{{label}}">               <span class="column-header-name">{{label}}</span>             </th>           {{/fields}}           <th class="last-header" style="width: {{lastHeaderWidth}}px; max-width: {{lastHeaderWidth}}px; min-width: {{lastHeaderWidth}}px; padding: 0; margin: 0;"></th>         </tr>       </thead>       <tbody class="scroll-content"></tbody>     </table>     </div>   ',toTemplateJSON:function(){var e=this.model.toJSON();return e.notEmpty=this.fields.length>0,e.fields=_.map(this.fields,function(e){return e.toJSON()}),e.lastHeaderWidth=this.scrollbarDimensions.width-2,e},render:function(){var i=this;this.fields=this.model.fields.filter(function(e){return-1==_.indexOf(i.state.get("hiddenFields"),e.id)}),this.scrollbarDimensions=this.scrollbarDimensions||this._scrollbarSize();var r=this.fields.length,s=i.el.width()-20-10*r-this.scrollbarDimensions.width,n=parseInt(Math.max(50,s/r),10),a=Math.max(s-r*n,0);_.each(this.fields,function(e,t){e.set(0===t?{width:n+a}:{width:n})});var o=Mustache.render(this.template,this.toTemplateJSON());this.el.html(o),this.model.records.forEach(function(r){var s=e("<tr />");i.el.find("tbody").append(s);var n=new t.GridRow({model:r,el:s,fields:i.fields});n.render()});var l=this.el.find("tbody")[0];return l.scrollHeight<=l.offsetHeight&&this.el.find("th.last-header").hide(),this.el.find(".recline-grid").toggleClass("no-hidden",0===i.state.get("hiddenFields").length),this.el.find(".recline-grid tbody").scroll(this.onHorizontalScroll),this},_scrollbarSize:function(){var t=e("<div style='position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;'></div>").appendTo("body"),i={width:t.width()-t[0].clientWidth+1,height:t.height()-t[0].clientHeight};return t.remove(),i}}),t.GridRow=Backbone.View.extend({initialize:function(t){_.bindAll(this,"render"),this._fields=t.fields,this.el=e(this.el),this.model.bind("change",this.render)},template:'       {{#cells}}       <td data-field="{{field}}" style="width: {{width}}px; max-width: {{width}}px; min-width: {{width}}px;">         <div class="data-table-cell-content">           <a href="javascript:{}" class="data-table-cell-edit" title="Edit this cell">&nbsp;</a>           <div class="data-table-cell-value">{{{value}}}</div>         </div>       </td>       {{/cells}}     ',events:{"click .data-table-cell-edit":"onEditClick","click .data-table-cell-editor .okButton":"onEditorOK","click .data-table-cell-editor .cancelButton":"onEditorCancel"},toTemplateJSON:function(){var e=this.model,t=this._fields.map(function(t){return{field:t.id,width:t.get("width"),value:e.getFieldValue(t)}});return{id:this.id,cells:t}},render:function(){this.el.attr("data-id",this.model.id);var t=Mustache.render(this.template,this.toTemplateJSON());return e(this.el).html(t),this},cellEditorTemplate:'     <div class="menu-container data-table-cell-editor">       <textarea class="data-table-cell-editor-editor" bind="textarea">{{value}}</textarea>       <div id="data-table-cell-editor-actions">         <div class="data-table-cell-editor-action">           <button class="okButton btn primary">Update</button>           <button class="cancelButton btn danger">Cancel</button>         </div>       </div>     </div>   ',onEditClick:function(t){var i=this.el.find(".data-table-cell-editor-editor");i.length>0&&i.parents(".data-table-cell-value").html(i.text()).siblings(".data-table-cell-edit").removeClass("hidden"),e(t.target).addClass("hidden");var r=e(t.target).siblings(".data-table-cell-value");r.data("previousContents",r.text());var s=Mustache.render(this.cellEditorTemplate,{value:r.text()});r.html(s)},onEditorOK:function(t){var i=e(t.target),r=(i.parents("tr").attr("data-id"),i.parents("td").attr("data-field")),s=i.parents(".data-table-cell-editor").find(".data-table-cell-editor-editor").val(),n={};n[r]=s,this.model.set(n),this.trigger("recline:flash",{message:"Updating row...",loader:!0}),this.model.save().then(function(){this.trigger("recline:flash",{message:"Row updated successfully",category:"success"})}).fail(function(){this.trigger("recline:flash",{message:"Error saving row",category:"error",persist:!0})})},onEditorCancel:function(t){var i=e(t.target).parents(".data-table-cell-value");i.html(i.data("previousContents")).siblings(".data-table-cell-edit").removeClass("hidden")}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(e,t){t.Map=Backbone.View.extend({template:'     <div class="recline-map">       <div class="panel map"></div>     </div> ',latitudeFieldNames:["lat","latitude"],longitudeFieldNames:["lon","longitude"],geometryFieldNames:["geojson","geom","the_geom","geometry","spatial","location","geo","lonlat"],initialize:function(i){var r=this;this.el=e(this.el),this.visible=!0,this.mapReady=!1,this.map=null;var s=_.extend({geomField:null,lonField:null,latField:null,autoZoom:!0,cluster:!1},i.state);this.state=new recline.Model.ObjectState(s),this._clusterOptions={zoomToBoundsOnClick:!0,maxClusterRadius:80,singleMarkerMode:!1,skipDuplicateAddTesting:!0,animateAddingMarkers:!1},this.model.fields.bind("change",function(){r._setupGeometryField(),r.render()}),this.model.records.bind("add",function(e){r.redraw("add",e)}),this.model.records.bind("change",function(e){r.redraw("remove",e),r.redraw("add",e)}),this.model.records.bind("remove",function(e){r.redraw("remove",e)}),this.model.records.bind("reset",function(){r.redraw("reset")}),this.menu=new t.MapMenu({model:this.model,state:this.state.toJSON()}),this.menu.state.bind("change",function(){r.state.set(r.menu.state.toJSON()),r.redraw()}),this.state.bind("change",function(){r.redraw()}),this.elSidebar=this.menu.el},infobox:function(e){var t="";for(key in e.attributes)this.state.get("geomField")&&key==this.state.get("geomField")||(t+="<div><strong>"+key+"</strong>: "+e.attributes[key]+"</div>");return t},geoJsonLayerOptions:{pointToLayer:function(e,t){var i=new L.Marker(t);return i.bindPopup(e.properties.popupContent),this.markers.addLayer(i),i},onEachFeature:function(e,t){e.properties&&e.properties.popupContent&&t.bindPopup(e.properties.popupContent)}},render:function(){return htmls=Mustache.render(this.template,this.model.toTemplateJSON()),e(this.el).html(htmls),this.$map=this.el.find(".panel.map"),this.redraw(),this},redraw:function(e,t){var i=this;if(e=e||"refresh",i._geomReady()||i._setupGeometryField(),i.mapReady||i._setupMap(),this._geomReady()&&this.mapReady){this.map.removeLayer(this.features),this.map.removeLayer(this.markers);var r=0;this.features.eachLayer(function(){r++}),"refresh"==e||"reset"==e?(this.features.clearLayers(),this.map.removeLayer(this.markers),this.markers=new L.MarkerClusterGroup(this._clusterOptions),this._add(this.model.records.models)):"add"==e&&t?this._add(t):"remove"==e&&t&&this._remove(t);var s=0;this.features.eachLayer(function(){s++});var n=s-r>0;if(!this.state.get("cluster")&&s>64&&n)return void this.state.set({cluster:!0});this.map.addLayer(this.state.get("cluster")?this.markers:this.features),this.state.get("autoZoom")&&(this.visible?this._zoomToFeatures():this._zoomPending=!0)}},show:function(){this.map&&(this.map.invalidateSize(),this._zoomPending&&this.state.get("autoZoom")&&(this._zoomToFeatures(),this._zoomPending=!1)),this.visible=!0},hide:function(){this.visible=!1},_geomReady:function(){return Boolean(this.state.get("geomField")||this.state.get("latField")&&this.state.get("lonField"))},_add:function(e){var t=this;e instanceof Array||(e=[e]);var i=0,r=0;_.every(e,function(e){i+=1;var s=t._getGeometryFromRecord(e);if("undefined"==typeof s||null===s)return!0;if(s instanceof Object){s.properties={popupContent:t.infobox(e),cid:e.cid};try{t.features.addData(s)}catch(n){r+=1;var a="Wrong geometry value";n.message&&(a+=" ("+n.message+")"),10>=r&&t.trigger("recline:flash",{message:a,category:"error"})}}else r+=1,10>=r&&t.trigger("recline:flash",{message:"Wrong geometry value",category:"error"});return!0})},_remove:function(e){var t=this;e instanceof Array||(e=[e]),_.each(e,function(e){for(key in t.features._layers)t.features._layers[key].feature.properties.cid==e.cid&&t.features.removeLayer(t.features._layers[key])})},_getGeometryFromRecord:function(t){if(this.state.get("geomField")){var i=t.get(this.state.get("geomField"));if("string"==typeof i)try{i=e.parseJSON(i)}catch(r){}if("string"==typeof i){i=i.replace("(","").replace(")","");var s=i.split(","),n=parseFloat(s[0]),a=parseFloat(s[1]);return isNaN(a)||isNaN(parseFloat(n))?null:{type:"Point",coordinates:[a,n]}}return i&&_.isArray(i)?{type:"Point",coordinates:[i[0],i[1]]}:i&&i.lat?{type:"Point",coordinates:[i.lon||i.lng,i.lat]}:i}if(this.state.get("lonField")&&this.state.get("latField")){var a=t.get(this.state.get("lonField")),n=t.get(this.state.get("latField"));if(!isNaN(parseFloat(a))&&!isNaN(parseFloat(n)))return{type:"Point",coordinates:[a,n]}}return null},_setupGeometryField:function(){this._geomReady()||(this.state.set({geomField:this._checkField(this.geometryFieldNames),latField:this._checkField(this.latitudeFieldNames),lonField:this._checkField(this.longitudeFieldNames)}),this.menu.state.set(this.state.toJSON()))},_checkField:function(e){for(var t=this.model.fields.pluck("id"),i=0;i<e.length;i++)for(var r=0;r<t.length;r++)if(t[r].toLowerCase()==e[i].toLowerCase())return t[r];return null},_zoomToFeatures:function(){var e=this.features.getBounds();e&&e.getNorthEast()&&e.getSouthWest()?this.map.fitBounds(e):this.map.setView([0,0],2)},_setupMap:function(){this.map=new L.Map(this.$map.get(0));var e="//otile{s}-s.mqcdn.com/tiles/1.0.0/osm/{z}/{x}/{y}.png",t='Map data &copy; 2011 OpenStreetMap contributors, Tiles Courtesy of <a href="http://www.mapquest.com/" target="_blank">MapQuest</a> <img src="//developer.mapquest.com/content/osm/mq_logo.png">',i=new L.TileLayer(e,{maxZoom:18,attribution:t,subdomains:"1234"});this.map.addLayer(i),this.markers=new L.MarkerClusterGroup(this._clusterOptions),this.geoJsonLayerOptions.pointToLayer=_.bind(this.geoJsonLayerOptions.pointToLayer,this),this.features=new L.GeoJSON(null,this.geoJsonLayerOptions),this.map.setView([0,0],2),this.mapReady=!0},_selectOption:function(t,i){var r=e("."+t+" > select > option");r&&r.each(function(){return this.value==i?(e(this).attr("selected","selected"),!1):void 0})}}),t.MapMenu=Backbone.View.extend({className:"editor",template:'     <form class="form-stacked">       <div class="clearfix">         <div class="editor-field-type">             <label class="radio">               <input type="radio" id="editor-field-type-latlon" name="editor-field-type" value="latlon" checked="checked"/>               Zemepisná šírka / dĺžka polia</label>             <label class="radio">               <input type="radio" id="editor-field-type-geom" name="editor-field-type" value="geom" />               GeoJSON pole</label>         </div>         <div class="editor-field-type-latlon">           <label>Zemepisná šírka</label>           <div class="input editor-lat-field">             <select>             <option value=""></option>             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}             </select>           </div>           <label>Zemepisná dĺžka</label>           <div class="input editor-lon-field">             <select>             <option value=""></option>             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}             </select>           </div>         </div>         <div class="editor-field-type-geom" style="display:none">           <label>Geometria (GeoJSON)</label>           <div class="input editor-geom-field">             <select>             <option value=""></option>             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}             </select>           </div>         </div>       </div>       <div class="editor-buttons">         <button class="btn editor-update-map">Aktualizovať</button>       </div>       <div class="editor-options" >         <label class="checkbox">           <input type="checkbox" id="editor-auto-zoom" value="autozoom" checked="checked" />           Funkcia automatické priblíženie</label>         <label class="checkbox">           <input type="checkbox" id="editor-cluster" value="cluster"/>           Zhromaždiť značky</label>       </div>       <input type="hidden" class="editor-id" value="map-1" />     </form>   ',events:{"click .editor-update-map":"onEditorSubmit","change .editor-field-type":"onFieldTypeChange","click #editor-auto-zoom":"onAutoZoomChange","click #editor-cluster":"onClusteringChange"},initialize:function(t){this.el=e(this.el),_.bindAll(this,"render"),this.model.fields.bind("change",this.render),this.state=new recline.Model.ObjectState(t.state),this.state.bind("change",this.render),this.render()},render:function(){return htmls=Mustache.render(this.template,this.model.toTemplateJSON()),e(this.el).html(htmls),this._geomReady()&&this.model.fields.length&&(this.state.get("geomField")?(this._selectOption("editor-geom-field",this.state.get("geomField")),this.el.find("#editor-field-type-geom").attr("checked","checked").change()):(this._selectOption("editor-lon-field",this.state.get("lonField")),this._selectOption("editor-lat-field",this.state.get("latField")),this.el.find("#editor-field-type-latlon").attr("checked","checked").change())),this.state.get("autoZoom")?this.el.find("#editor-auto-zoom").attr("checked","checked"):this.el.find("#editor-auto-zoom").removeAttr("checked"),this.state.get("cluster")?this.el.find("#editor-cluster").attr("checked","checked"):this.el.find("#editor-cluster").removeAttr("checked"),this},_geomReady:function(){return Boolean(this.state.get("geomField")||this.state.get("latField")&&this.state.get("lonField"))},onEditorSubmit:function(e){return e.preventDefault(),this.state.set(this.el.find("#editor-field-type-geom").attr("checked")?{geomField:this.el.find(".editor-geom-field > select > option:selected").val(),lonField:null,latField:null}:{geomField:null,lonField:this.el.find(".editor-lon-field > select > option:selected").val(),latField:this.el.find(".editor-lat-field > select > option:selected").val()}),!1},onFieldTypeChange:function(e){"geom"==e.target.value?(this.el.find(".editor-field-type-geom").show(),this.el.find(".editor-field-type-latlon").hide()):(this.el.find(".editor-field-type-geom").hide(),this.el.find(".editor-field-type-latlon").show())},onAutoZoomChange:function(){this.state.set({autoZoom:!this.state.get("autoZoom")})},onClusteringChange:function(){this.state.set({cluster:!this.state.get("cluster")})},_selectOption:function(t,i){var r=this.el.find("."+t+" > select > option");r&&r.each(function(){return this.value==i?(e(this).attr("selected","selected"),!1):void 0})}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(e,t){t.MultiView=Backbone.View.extend({template:'   <div class="recline-data-explorer">     <div class="alert-messages"></div>         <div class="header clearfix">       <div class="navigation">         <div class="btn-group" data-toggle="buttons-radio">         {{#views}}         <a href="#{{id}}" data-view="{{id}}" class="btn">{{label}}</a>         {{/views}}         </div>       </div>       <div class="recline-results-info">         <span class="doc-count">{{recordCount}}</span> záznamov      </div>       <div class="menu-right">         <div class="btn-group" data-toggle="buttons-checkbox">           {{#sidebarViews}}           <a href="#" data-action="{{id}}" class="btn">{{label}}</a>           {{/sidebarViews}}         </div>       </div>       <div class="query-editor-here" style="display:inline;"></div>     </div>     <div class="data-view-sidebar"></div>     <div class="data-view-container"></div>   </div>   ',events:{"click .menu-right a":"_onMenuClick","click .navigation a":"_onSwitchView"},initialize:function(i){var r=this;this.el=e(this.el),this._setupState(i.state),this.pageViews=i.views?i.views:[{id:"grid",label:"Grid",view:new t.SlickGrid({model:this.model,state:this.state.get("view-grid")})},{id:"graph",label:"Graph",view:new t.Graph({model:this.model,state:this.state.get("view-graph")})},{id:"map",label:"Map",view:new t.Map({model:this.model,state:this.state.get("view-map")})},{id:"timeline",label:"Timeline",view:new t.Timeline({model:this.model,state:this.state.get("view-timeline")})},{id:"transform",label:"Transform",view:new t.Transform({model:this.model})}],this.sidebarViews=i.sidebarViews?i.sidebarViews:[{id:"filterEditor",label:"Filters",view:new t.FilterEditor({model:this.model})},{id:"fieldsView",label:"Fields",view:new t.Fields({model:this.model})}],this.render(),this._bindStateChanges(),this._bindFlashNotifications(),this.state.get("readOnly")&&this.setReadOnly(),this.updateNav(this.state.get("currentView")?this.state.get("currentView"):this.pageViews[0].id),this._showHideSidebar(),this.model.bind("query:start",function(){r.notify({loader:!0,persist:!0})}),this.model.bind("query:done",function(){r.clearNotifications(),r.el.find(".doc-count").text(r.model.recordCount||"Unknown")}),this.model.bind("query:fail",function(e){r.clearNotifications();var t="";"string"==typeof e?t=e:"object"==typeof e?(e.title&&(t=e.title+": "),e.message&&(t+=e.message)):t="There was an error querying the backend",r.notify({message:t,category:"error",persist:!0})}),this.model.queryState.set(r.state.get("query"),{silent:!0}),this.model.fetch().fail(function(e){r.notify({message:e.message,category:"error",persist:!0})})},setReadOnly:function(){this.el.addClass("recline-read-only")},render:function(){var t=this.model.toTemplateJSON();t.views=this.pageViews,t.sidebarViews=this.sidebarViews;var i=Mustache.render(this.template,t);e(this.el).html(i);var r=this.el.find(".data-view-container"),s=this.el.find(".data-view-sidebar");_.each(this.pageViews,function(e){e.view.render(),r.append(e.view.el),e.view.elSidebar&&s.append(e.view.elSidebar)}),_.each(this.sidebarViews,function(e){this["$"+e.id]=e.view.el,s.append(e.view.el)},this);var n=new recline.View.Pager({model:this.model.queryState});this.el.find(".recline-results-info").after(n.el);var a=new recline.View.QueryEditor({model:this.model.queryState});this.el.find(".query-editor-here").append(a.el)},_showHideSidebar:function(){var t=this.el.find(".data-view-sidebar"),i=t.children().filter(function(){return"none"!=e(this).css("display")}).length;i>0?t.show():t.hide()},updateNav:function(e){this.el.find(".navigation a").removeClass("active");var t=this.el.find('.navigation a[data-view="'+e+'"]');t.addClass("active"),_.each(this.pageViews,function(t){t.id===e?(t.view.el.show(),t.view.elSidebar&&t.view.elSidebar.show()):(t.view.el.hide(),t.view.elSidebar&&t.view.elSidebar.hide(),t.view.hide&&t.view.hide())}),this._showHideSidebar(),_.each(this.pageViews,function(t){t.id===e&&t.view.show&&t.view.show()})},_onMenuClick:function(t){t.preventDefault();var i=e(t.target).attr("data-action");this["$"+i].toggle(),this._showHideSidebar()},_onSwitchView:function(t){t.preventDefault();var i=e(t.target).attr("data-view");this.updateNav(i),this.state.set({currentView:i})},_setupState:function(e){var i=this,r=t.parseHashQueryString(),s=r.reclineQuery;s=s?JSON.parse(s):i.model.queryState.toJSON();var n=r["view-graph"]||r.graph;n=n?JSON.parse(n):{};var a=_.extend({query:s,"view-graph":n,backend:this.model.backend.__type__,url:this.model.get("url"),dataset:this.model.toJSON(),currentView:null,readOnly:!1},e);this.state=new recline.Model.ObjectState(a)},_bindStateChanges:function(){var e=this;this.model.queryState.bind("change",function(){e.state.set({query:e.model.queryState.toJSON()})}),_.each(this.pageViews,function(t){if(t.view.state&&t.view.state.bind){var i={};i["view-"+t.id]=t.view.state.toJSON(),e.state.set(i),t.view.state.bind("change",function(){var i={};i["view-"+t.id]=t.view.state.toJSON(),e.state.set(i,{silent:!0}),e.state.trigger("change")})}})},_bindFlashNotifications:function(){var e=this;_.each(this.pageViews,function(t){t.view.bind("recline:flash",function(t){e.notify(t)})})},notify:function(t){var i,r=_.extend({message:"Loading",category:"warning",loader:!1},t);i=r.loader?'         <div class="alert alert-info alert-loader">           {{message}}           <span class="notification-loader">&nbsp;</span>         </div>':'         <div class="alert alert-{{category}} fade in" data-alert="alert"><a class="close" data-dismiss="alert" href="#">×</a>           {{message}}         </div>';var s=e(Mustache.render(i,r));s=e(s).appendTo(e(".recline-data-explorer .alert-messages")),t.persist||setTimeout(function(){e(s).fadeOut(1e3,function(){e(this).remove()})},1e3)},clearNotifications:function(){var t=e(".recline-data-explorer .alert-messages .alert");t.fadeOut(1500,function(){e(this).remove()})}}),t.MultiView.restore=function(e){var i;i="memory"===e.backend?{backend:"memory",records:[{stub:"this is a stub dataset because we do not restore memory datasets"}]}:_.extend({url:e.url,backend:e.backend},e.dataset);var r=new recline.Model.Dataset(i),s=new t.MultiView({model:r,state:e});return s};var i=/^([^?]+)(\?.*)?/;t.parseHashUrl=function(e){var t=i.exec(e);return null===t?{}:{path:t[1],query:t[2]||""}},t.parseQueryString=function(e){if(!e)return{};var t,i={},r=function(e){return unescape(e.replace(/\+/g," "))},s=/([^&=]+)=?([^&]*)/g;for(e&&e.length&&"?"===e[0]&&(e=e.slice(1));t=s.exec(e);)i[r(t[1])]=r(t[2]);return i},t.parseHashQueryString=function(){return q=t.parseHashUrl(window.location.hash).query,t.parseQueryString(q)},t.composeQueryString=function(t){var i="?",r=[];return e.each(t,function(e,t){"object"==typeof t&&(t=JSON.stringify(t)),r.push(e+"="+encodeURIComponent(t))}),i+=r.join("&")},t.getNewHashForQueryString=function(e){var i=t.composeQueryString(e);return window.location.hash?window.location.hash.split("?")[0].slice(1)+i:i},t.setHashQueryString=function(e){window.location.hash=t.getNewHashForQueryString(e)}}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(e,t){t.SlickGrid=Backbone.View.extend({initialize:function(t){this.el=e(this.el),this.el.addClass("recline-slickgrid"),_.bindAll(this,"render"),this.model.records.bind("add",this.render),this.model.records.bind("reset",this.render),this.model.records.bind("remove",this.render),this.model.records.bind("change",this.onRecordChanged,this);var i=_.extend({hiddenColumns:[],columnsOrder:[],columnsSort:{},columnsWidth:[],columnsEditor:[],options:{},fitColumns:!1},t.state);this.state=new recline.Model.ObjectState(i)},events:{},onRecordChanged:function(e){if(this.grid){var t=this.grid.getData().getModelRow(e);this.grid.invalidateRow(t),this.grid.getData().updateItem(e,t),this.grid.render()}},render:function(){function t(t){var i=e(t).text();return t!==i&&""!==i?i:t}function i(e){var t={};return s.model.fields.each(function(i){t[i.id]=e.getFieldValueUnrendered(i)}),t}function r(){var e=[],t=[];this.push=function(i,r){e.push(i),t.push(r)},this.getLength=function(){return t.length},this.getItem=function(e){return t[e]},this.getItemMetadata=function(){return{}},this.getModel=function(t){return e[t]},this.getModelRow=function(t){return e.indexOf(t)},this.updateItem=function(r,s){t[s]=i(r),e[s]=r}}var s=this,n=_.extend({enableCellNavigation:!0,enableColumnReorder:!0,explicitInitialization:!0,syncColumnCellResize:!0,forceFitColumns:this.state.get("fitColumns")},s.state.get("gridOptions")),a=[],o=function(e,t,i,r,n){var a=s.model.fields.get(r.id);return a.renderer?a.renderer(i,a,n):i};_.each(this.model.fields.toJSON(),function(e){var i={id:e.id,name:t(e.label),field:e.id,sortable:!0,minWidth:80,formatter:o},r=_.find(s.state.get("columnsWidth"),function(t){return t.column===e.id});r&&(i.width=r.width);var n=_.find(s.state.get("columnsEditor"),function(t){return t.column===e.id});n&&(i.editor=n.editor),a.push(i)});var l=a.filter(function(e){return-1===_.indexOf(s.state.get("hiddenColumns"),e.id)});this.state.get("columnsOrder")&&this.state.get("columnsOrder").length>0&&(l=l.sort(function(e,t){return _.indexOf(s.state.get("columnsOrder"),e.id)>_.indexOf(s.state.get("columnsOrder"),t.id)?1:-1}),a=a.sort(function(e,t){return _.indexOf(s.state.get("columnsOrder"),e.id)>_.indexOf(s.state.get("columnsOrder"),t.id)?1:-1}));for(var d=[],c=a.length-1;c>=0;c--)-1===_.indexOf(_.pluck(l,"id"),a[c].id)&&d.push(a.splice(c,1)[0]);a=a.concat(d);var h=new r;this.model.records.each(function(e){h.push(e,i(e))}),this.grid=new Slick.Grid(this.el,h,l,n);
var u=this.model.queryState.get("sort");if(u){var f=u[0].field,p="desc"!==u[0].order;this.grid.setSortColumn(f,p)}this.grid.onSort.subscribe(function(e,t){var i=t.sortAsc?"asc":"desc",r=[{field:t.sortCol.field,order:i}];s.model.query({sort:r})}),this.grid.onColumnsReordered.subscribe(function(){s.state.set({columnsOrder:_.pluck(s.grid.getColumns(),"id")})}),this.grid.onColumnsResized.subscribe(function(e,t){var i=t.grid.getColumns(),r=t.grid.getOptions().defaultColumnWidth,n=[];_.each(i,function(e){e.width!=r&&n.push({column:e.id,width:e.width})}),s.state.set({columnsWidth:n})}),this.grid.onCellChange.subscribe(function(e,t){var i=t.grid,r=h.getModel(t.row),s=i.getColumns()[t.cell].id,n={};n[s]=t.item[s],r.set(n)});new Slick.Controls.ColumnPicker(a,this.grid,_.extend(n,{state:this.state}));return s.visible?(s.grid.init(),s.rendered=!0):s.rendered=!1,this},show:function(){this.rendered||(this.grid||this.render(),this.grid.init(),this.rendered=!0),this.visible=!0},hide:function(){this.visible=!1}})}(jQuery,recline.View),function(e){function t(t,i,r){function s(){i.onHeaderContextMenu.subscribe(n),r=e.extend({},d,r),o=e('<ul class="dropdown-menu slick-contextmenu" style="display:none;position:absolute;z-index:20;" />').appendTo(document.body),o.bind("mouseleave",function(){e(this).fadeOut(r.fadeSpeed)}),o.bind("click",a)}function n(s){s.preventDefault(),o.empty(),l=[];for(var n,a,d=0;d<t.length;d++)n=e("<li />").appendTo(o),a=e('<input type="checkbox" />').data("column-id",t[d].id).attr("id","slick-column-vis-"+t[d].id),l.push(a),null!==i.getColumnIndex(t[d].id)&&a.attr("checked","checked"),a.appendTo(n),e("<label />").text(t[d].name).attr("for","slick-column-vis-"+t[d].id).appendTo(n);e("<li/>").addClass("divider").appendTo(o),n=e("<li />").data("option","autoresize").appendTo(o),a=e('<input type="checkbox" />').data("option","autoresize").attr("id","slick-option-autoresize"),a.appendTo(n),e("<label />").text("Force fit columns").attr("for","slick-option-autoresize").appendTo(n),i.getOptions().forceFitColumns&&a.attr("checked","checked"),o.css("top",s.pageY-10).css("left",s.pageX-10).fadeIn(r.fadeSpeed)}function a(s){var n;if("autoresize"===e(s.target).data("option")){var a;return e(s.target).is("li")?(n=e(s.target).find("input").first(),a=!n.is(":checked"),n.attr("checked",a)):a=s.target.checked,a?(i.setOptions({forceFitColumns:!0}),i.autosizeColumns()):i.setOptions({forceFitColumns:!1}),void r.state.set({fitColumns:a})}if(e(s.target).is("li")&&!e(s.target).hasClass("divider")||e(s.target).is("input")){e(s.target).is("li")&&(n=e(s.target).find("input").first(),n.attr("checked",!n.is(":checked")));var o=[],d=[];if(e.each(l,function(i){e(this).is(":checked")?o.push(t[i]):d.push(t[i].id)}),!o.length)return void e(s.target).attr("checked","checked");i.setColumns(o),r.state.set({hiddenColumns:d})}}var o,l,d={fadeSpeed:250};s()}e.extend(!0,window,{Slick:{Controls:{ColumnPicker:t}}})}(jQuery),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(e,t){"undefined"!=typeof VMM&&(VMM.debug=!1),t.Timeline=Backbone.View.extend({template:'     <div class="recline-timeline">       <div id="vmm-timeline-id"></div>     </div>   ',startFieldNames:["date","startdate","start","start-date"],endFieldNames:["end","endDate"],elementId:"#vmm-timeline-id",initialize:function(t){var i=this;this.el=e(this.el),this.timeline=new VMM.Timeline,this._timelineIsInitialized=!1,this.model.fields.bind("reset",function(){i._setupTemporalField()}),this.model.records.bind("all",function(){i.reloadData()});var r=_.extend({startField:null,endField:null,timelineJSOptions:{}},t.state);this.state=new recline.Model.ObjectState(r),this._setupTemporalField()},render:function(){var t={},i=Mustache.render(this.template,t);this.el.html(i),e(this.elementId).length>0&&this._initTimeline()},show:function(){this._timelineIsInitialized===!1&&this._initTimeline()},_initTimeline:function(){var e=this.el.find(this.elementId),t=Math.max(this.el.width(),this.el.find(".recline-timeline").width());t&&e.width(t);var i=this._timelineJSON();this.timeline.init(i,this.elementId,this.state.get("timelineJSOptions")),this._timelineIsInitialized=!0},reloadData:function(){if(this._timelineIsInitialized){var e=this._timelineJSON();this.timeline.reload(e)}},convertRecord:function(e,t){return this._convertRecord(e,t)},_convertRecord:function(e){var t=this._parseDate(e.get(this.state.get("startField"))),i=this._parseDate(e.get(this.state.get("endField")));if(t){var r={startDate:t,endDate:i,headline:String(e.get("title")||""),text:e.get("description")||e.summary()};return r}return null},_timelineJSON:function(){var e=this,t={timeline:{type:"default",headline:"",date:[]}};if(this.model.records.each(function(i){var r=e.convertRecord(i,e.fields);r&&t.timeline.date.push(r)}),0===t.timeline.date.length){var i={startDate:"2000,1,1",headline:"No data to show!"};t.timeline.date.push(i)}return t},_parseDate:function(e){if(!e)return null;var t=e.trim();return t=t.replace(/(\d)th/g,"$1"),t=t.replace(/(\d)st/g,"$1"),t=t.trim()?moment(t):null,"Invalid Date"==t.toDate()?null:t.toDate()},_setupTemporalField:function(){this.state.set({startField:this._checkField(this.startFieldNames),endField:this._checkField(this.endFieldNames)})},_checkField:function(e){for(var t=this.model.fields.pluck("id"),i=0;i<e.length;i++)for(var r=0;r<t.length;r++)if(t[r].toLowerCase()==e[i].toLowerCase())return t[r];return null}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(e,t){t.Transform=Backbone.View.extend({template:'     <div class="recline-transform">       <div class="script">         <h2>           Transform Script           <button class="okButton btn btn-primary">Run on all records</button>         </h2>         <textarea class="expression-preview-code"></textarea>       </div>       <div class="expression-preview-parsing-status">         No syntax error.       </div>       <div class="preview">         <h3>Preview</h3>         <div class="expression-preview-container"></div>       </div>     </div>   ',events:{"click .okButton":"onSubmit","keydown .expression-preview-code":"onEditorKeydown"},initialize:function(){this.el=e(this.el)},render:function(){var e=Mustache.render(this.template);this.el.html(e);var t=this.el.find(".expression-preview-code");if(this.model.fields.length>0)var i=this.model.fields.models[0].id;else var i="unknown";t.val("function(doc) {\n  doc['"+i+"'] = doc['"+i+"'];\n  return doc;\n}"),t.keydown()},onSubmit:function(){var e=this.el.find(".expression-preview-code").val(),t=recline.Data.Transform.evalFunction(e);return t.errorMessage?void this.trigger("recline:flash",{message:"Error with function! "+t.errorMessage}):void this.model.transform(t)},editPreviewTemplate:'       <table class="table table-condensed table-bordered before-after">       <thead>       <tr>         <th>Field</th>         <th>Before</th>         <th>After</th>       </tr>       </thead>       <tbody>       {{#row}}       <tr>         <td>           {{field}}         </td>         <td class="before {{#different}}different{{/different}}">           {{before}}         </td>         <td class="after {{#different}}different{{/different}}">           {{after}}         </td>       </tr>       {{/row}}       </tbody>       </table>   ',onEditorKeydown:function(e){var t=this;window.setTimeout(function(){var i=t.el.find(".expression-preview-parsing-status"),r=recline.Data.Transform.evalFunction(e.target.value);if(r.errorMessage)i.text(r.errorMessage);else{i.text("No syntax error.");var s=t.model.records.map(function(e){return e.toJSON()}),n=recline.Data.Transform.previewTransform(s,r),a=t.el.find(".expression-preview-container"),o=t.model.fields.toJSON(),l=_.map(n.slice(0,4),function(e){return _.map(o,function(t){return{field:t.id,before:e.before[t.id],after:e.after[t.id],different:!_.isEqual(e.before[t.id],e.after[t.id])}})});a.html(""),_.each(l,function(e){var i=Mustache.render(t.editPreviewTemplate,{row:e});a.append(i)})}},1,!0)}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(e,t){t.FacetViewer=Backbone.View.extend({className:"recline-facet-viewer",template:'     <div class="facets">       {{#facets}}       <div class="facet-summary" data-facet="{{id}}">         <h3>           {{id}}         </h3>         <ul class="facet-items">         {{#terms}}           <li><a class="facet-choice js-facet-filter" data-value="{{term}}" href="#{{term}}">{{term}} ({{count}})</a></li>         {{/terms}}         {{#entries}}           <li><a class="facet-choice js-facet-filter" data-value="{{time}}">{{term}} ({{count}})</a></li>         {{/entries}}         </ul>       </div>       {{/facets}}     </div>   ',events:{"click .js-facet-filter":"onFacetFilter"},initialize:function(){_.bindAll(this,"render"),this.el=e(this.el),this.model.facets.bind("all",this.render),this.model.fields.bind("all",this.render),this.render()},render:function(){var e={fields:this.model.fields.toJSON()};e.facets=_.map(this.model.facets.toJSON(),function(e){return"date_histogram"===e._type&&(e.entries=_.map(e.entries,function(e){return e.term=new Date(e.time).toDateString(),e})),e});var t=Mustache.render(this.template,e);this.el.html(t),this.model.facets.length>0?this.el.show():this.el.hide()},onHide:function(e){e.preventDefault(),this.el.hide()},onFacetFilter:function(t){t.preventDefault();var i=e(t.target),r=i.closest(".facet-summary").attr("data-facet"),s=i.attr("data-value");this.model.queryState.addFilter({type:"term",field:r,term:s}),this.model.query()}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(e,t){t.Fields=Backbone.View.extend({className:"recline-fields-view",template:'     <div class="accordion fields-list well">     <h3>Fields <a href="#" class="js-show-hide">+</a></h3>     {{#fields}}       <div class="accordion-group field">         <div class="accordion-heading">           <i class="icon-file"></i>           <h4>             {{label}}             <small>               {{type}}               <a class="accordion-toggle" data-toggle="collapse" href="#collapse{{id}}"> &raquo; </a>             </small>           </h4>         </div>         <div id="collapse{{id}}" class="accordion-body collapse">           <div class="accordion-inner">             {{#facets}}             <div class="facet-summary" data-facet="{{id}}">               <ul class="facet-items">               {{#terms}}                 <li class="facet-item"><span class="term">{{term}}</span> <span class="count">[{{count}}]</span></li>               {{/terms}}               </ul>             </div>             {{/facets}}             <div class="clear"></div>           </div>         </div>       </div>     {{/fields}}     </div>   ',initialize:function(){var t=this;this.el=e(this.el),_.bindAll(this,"render"),this.model.fields.bind("reset",function(){t.model.fields.each(function(e){e.facets.unbind("all",t.render),e.facets.bind("all",t.render)}),t.model.getFieldsSummary(),t.render()}),this.el.find(".collapse").collapse(),this.render()},render:function(){var e={fields:[]};this.model.fields.each(function(t){var i=t.toJSON();i.facets=t.facets.toJSON(),e.fields.push(i)});var t=Mustache.render(this.template,e);this.el.html(t)}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(e,t){t.FilterEditor=Backbone.View.extend({className:"recline-filter-editor well",template:'     <div class="filters">       <h3>Filtre</h3>       <a href="#" class="js-add-filter">Pridať filter</a>       <form class="form-stacked js-add" style="display: none;">         <fieldset>           <label>Stĺpec</label>           <select class="fields">             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}           </select>           <label>Filter type</label>           <select class="filterType">             <option value="term">Hodnota</option>             <option value="range">Rozsah</option>             <option value="geo_distance">Geo vzdialenosť</option>           </select>           <button type="submit" class="btn">Pridať</button>         </fieldset>       </form>       <form class="form-stacked js-edit">         {{#filters}}           {{{filterRender}}}         {{/filters}}         {{#filters.length}}         <button type="submit" class="btn">Aktualizovať</button>         {{/filters.length}}       </form>     </div>   ',filterTemplates:{term:'       <div class="filter-{{type}} filter">         <fieldset>           <legend>             {{field}} <small>{{type}}</small>             <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           </legend>           <input type="text" value="{{term}}" name="term" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     ',range:'       <div class="filter-{{type}} filter">         <fieldset>           <legend>             {{field}} <small>{{type}}</small>             <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           </legend>           <label class="control-label" for="">From</label>           <input type="text" value="{{start}}" name="start" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />           <label class="control-label" for="">To</label>           <input type="text" value="{{stop}}" name="stop" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     ',geo_distance:'       <div class="filter-{{type}} filter">         <fieldset>           <legend>             {{field}} <small>{{type}}</small>             <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           </legend>           <label class="control-label" for="">Longitude</label>           <input type="text" value="{{point.lon}}" name="lon" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />           <label class="control-label" for="">Latitude</label>           <input type="text" value="{{point.lat}}" name="lat" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />           <label class="control-label" for="">Distance (km)</label>           <input type="text" value="{{distance}}" name="distance" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     '},events:{"click .js-remove-filter":"onRemoveFilter","click .js-add-filter":"onAddFilterShow","submit form.js-edit":"onTermFiltersUpdate","submit form.js-add":"onAddFilter"},initialize:function(){this.el=e(this.el),_.bindAll(this,"render"),this.model.fields.bind("all",this.render),this.model.queryState.bind("change",this.render),this.model.queryState.bind("change:filters:new-blank",this.render),this.render()},render:function(){var t=this,i=e.extend(!0,{},this.model.queryState.toJSON());i.filters=_.map(i.filters,function(e,t){return e.id=t,e}),i.fields=this.model.fields.toJSON(),i.filterRender=function(){return Mustache.render(t.filterTemplates[this.type],this)};var r=Mustache.render(this.template,i);this.el.html(r)},onAddFilterShow:function(t){t.preventDefault();var i=e(t.target);i.hide(),this.el.find("form.js-add").show()},onAddFilter:function(t){t.preventDefault();var i=e(t.target);i.hide();var r=i.find("select.filterType").val(),s=i.find("select.fields").val();this.model.queryState.addFilter({type:r,field:s})},onRemoveFilter:function(t){t.preventDefault();var i=e(t.target),r=i.attr("data-filter-id");this.model.queryState.removeFilter(r)},onTermFiltersUpdate:function(t){var i=this;t.preventDefault();var r=i.model.queryState.get("filters"),s=e(t.target);_.each(s.find("input"),function(t){var i=e(t),s=i.attr("data-filter-type"),n=(i.attr("data-filter-field"),parseInt(i.attr("data-filter-id"),10)),a=i.attr("name"),o=i.val();switch(s){case"term":r[n].term=o;break;case"range":r[n][a]=o;break;case"geo_distance":"distance"===a?r[n].distance=parseFloat(o):r[n].point[a]=parseFloat(o)}}),i.model.queryState.set({filters:r,from:0}),i.model.queryState.trigger("change")}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(e,t){t.Pager=Backbone.View.extend({className:"recline-pager",template:'     <div class="pagination">       <ul>         <li class="prev action-pagination-update"><a href="">&laquo;</a></li>         <li class="active"><a><input name="from" type="text" value="{{from}}" /> &ndash; <input name="to" type="text" value="{{to}}" /> </a></li>         <li class="next action-pagination-update"><a href="">&raquo;</a></li>       </ul>     </div>   ',events:{"click .action-pagination-update":"onPaginationUpdate","change input":"onFormSubmit"},initialize:function(){_.bindAll(this,"render"),this.el=e(this.el),this.model.bind("change",this.render),this.render()},onFormSubmit:function(e){e.preventDefault();var t=parseInt(this.el.find('input[name="from"]').val()),i=parseInt(this.el.find('input[name="to"]').val())-t;t=Math.max(t,0),i=Math.max(i,1),this.model.set({size:i,from:t})},onPaginationUpdate:function(t){t.preventDefault();var i=e(t.target),r=0;r=i.parent().hasClass("prev")?this.model.get("from")-Math.max(0,this.model.get("size")):this.model.get("from")+this.model.get("size"),r=Math.max(r,0),this.model.set({from:r})},render:function(){var e=this.model.toJSON();e.to=this.model.get("from")+this.model.get("size");var t=Mustache.render(this.template,e);this.el.html(t)}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(e,t){t.QueryEditor=Backbone.View.extend({className:"recline-query-editor",template:'     <form action="" method="GET" class="form-inline">       <div class="input-prepend text-query">         <span class="add-on"><i class="icon-search"></i></span>         <input type="text" name="q" value="{{q}}" class="span2" placeholder="Hľadať v dátach ..." class="search-query" />       </div>       <button type="submit" class="btn">Hľadaj &raquo;</button>     </form>   ',events:{"submit form":"onFormSubmit"},initialize:function(){_.bindAll(this,"render"),this.el=e(this.el),this.model.bind("change",this.render),this.render()},onFormSubmit:function(e){e.preventDefault();var t=this.el.find(".text-query input").val();this.model.set({q:t})},render:function(){var e=this.model.toJSON(),t=Mustache.render(this.template,e);this.el.html(t)}})}(jQuery,recline.View),this.recline=this.recline||{},this.recline.View=this.recline.View||{},function(e,t){t.ValueFilter=Backbone.View.extend({className:"recline-filter-editor well",template:'     <div class="filters">       <h3>Filtre</h3>       <button class="btn js-add-filter add-filter">Pridať filter</button>       <form class="form-stacked js-add" style="display: none;">         <fieldset>           <label>Stĺpec</label>           <select class="fields">             {{#fields}}             <option value="{{id}}">{{label}}</option>             {{/fields}}           </select>           <button type="submit" class="btn">Pridať</button>         </fieldset>       </form>       <form class="form-stacked js-edit">         {{#filters}}           {{{filterRender}}}         {{/filters}}         {{#filters.length}}         <button type="submit" class="btn update-filter">Aktualizovať</button>         {{/filters.length}}       </form>     </div>   ',filterTemplates:{term:'       <div class="filter-{{type}} filter">         <fieldset>           {{field}}           <a class="js-remove-filter" href="#" title="Remove this filter" data-filter-id="{{id}}">&times;</a>           <input type="text" value="{{term}}" name="term" data-filter-field="{{field}}" data-filter-id="{{id}}" data-filter-type="{{type}}" />         </fieldset>       </div>     '},events:{"click .js-remove-filter":"onRemoveFilter","click .js-add-filter":"onAddFilterShow","submit form.js-edit":"onTermFiltersUpdate","submit form.js-add":"onAddFilter"},initialize:function(){this.el=e(this.el),_.bindAll(this,"render"),this.model.fields.bind("all",this.render),this.model.queryState.bind("change",this.render),this.model.queryState.bind("change:filters:new-blank",this.render),this.render()},render:function(){var t=this,i=e.extend(!0,{},this.model.queryState.toJSON());i.filters=_.map(i.filters,function(e,t){return e.id=t,e}),i.fields=this.model.fields.toJSON(),i.filterRender=function(){return Mustache.render(t.filterTemplates.term,this)};var r=Mustache.render(this.template,i);this.el.html(r)},updateFilter:function(t){var i=this,r=i.model.queryState.get("filters"),s=e(t),n=parseInt(s.attr("data-filter-id"),10),a=s.val();r[n].term=a},onAddFilterShow:function(t){t.preventDefault();var i=e(t.target);i.hide(),this.el.find("form.js-add").show()},onAddFilter:function(t){t.preventDefault();var i=e(t.target);i.hide();var r=i.find("select.fields").val();this.model.queryState.addFilter({type:"term",field:r})},onRemoveFilter:function(t){t.preventDefault();var i=e(t.target),r=i.attr("data-filter-id");this.model.queryState.removeFilter(r)},onTermFiltersUpdate:function(t){var i=this;t.preventDefault();var r=i.model.queryState.get("filters"),s=e(t.target);_.each(s.find("input"),function(e){i.updateFilter(e)}),i.model.queryState.set({filters:r,from:0}),i.model.queryState.trigger("change")}})}(jQuery,recline.View);